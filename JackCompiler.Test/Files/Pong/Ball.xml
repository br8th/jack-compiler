<class>
  <keyword>class</keyword>
  <identifier>
    <name>Ball</name>
  </identifier>
  <symbol>{</symbol>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>x</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>0</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>y</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>1</index>
    </identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>lengthx</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>2</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>lengthy</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>3</index>
    </identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>d</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>4</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>straightD</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>5</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>diagonalD</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>6</index>
    </identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>boolean</keyword>
    <identifier>
      <name>invert</name>
      <category>FIELD</category>
      <type>boolean</type>
      <IsDeclaration>True</IsDeclaration>
      <index>7</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>positivex</name>
      <category>FIELD</category>
      <type>boolean</type>
      <IsDeclaration>True</IsDeclaration>
      <index>8</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>positivey</name>
      <category>FIELD</category>
      <type>boolean</type>
      <IsDeclaration>True</IsDeclaration>
      <index>9</index>
    </identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>leftWall</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>10</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>rightWall</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>11</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>topWall</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>12</index>
    </identifier>
    <symbol>,</symbol>
    <identifier>
      <name>bottomWall</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>13</index>
    </identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>wall</name>
      <category>FIELD</category>
      <type>int</type>
      <IsDeclaration>True</IsDeclaration>
      <index>14</index>
    </identifier>
    <symbol>;</symbol>
  </classVarDec>
  <subroutineDec>
    <keyword>constructor</keyword>
    <identifier>
      <name>Ball</name>
    </identifier>
    <identifier>
      <name>new</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList>
      <keyword>int</keyword>
      <identifier>
        <name>Ax</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>0</index>
      </identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>
        <name>Ay</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>1</index>
      </identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>
        <name>AleftWall</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>2</index>
      </identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>
        <name>ArightWall</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>3</index>
      </identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>
        <name>AtopWall</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>4</index>
      </identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>
        <name>AbottomWall</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>5</index>
      </identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>x</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>0</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>Ax</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>y</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>1</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>Ay</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>leftWall</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>10</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>AleftWall</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>2</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>rightWall</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>11</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>ArightWall</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>3</index>
              </identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <integerConstant>6</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>topWall</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>12</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>AtopWall</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>4</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>bottomWall</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>13</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>AbottomWall</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>5</index>
              </identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <integerConstant>6</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>wall</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>14</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <integerConstant>0</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>show</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList></expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <keyword>this</keyword>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>
      <name>dispose</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>Memory</name>
              </identifier>
              <symbol>.</symbol>
              <identifier>
                <name>deAlloc</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>this</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>
      <name>show</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>Screen</name>
              </identifier>
              <symbol>.</symbol>
              <identifier>
                <name>setColor</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>true</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>draw</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList></expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>
      <name>hide</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>Screen</name>
              </identifier>
              <symbol>.</symbol>
              <identifier>
                <name>setColor</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>false</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>draw</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList></expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>
      <name>draw</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>Screen</name>
              </identifier>
              <symbol>.</symbol>
              <identifier>
                <name>drawRectangle</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier>
                      <name>x</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>0</index>
                    </identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>y</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>1</index>
                    </identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>x</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>0</index>
                    </identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <integerConstant>5</integerConstant>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>y</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>1</index>
                    </identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <integerConstant>5</integerConstant>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>getLeft</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <identifier>
                <name>x</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>getRight</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <identifier>
                <name>x</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
            </term>
            <symbol>+</symbol>
            <term>
              <integerConstant>5</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>
      <name>setDestination</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList>
      <keyword>int</keyword>
      <identifier>
        <name>destx</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>1</index>
      </identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>
        <name>desty</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>2</index>
      </identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <varDec>
        <keyword>var</keyword>
        <keyword>int</keyword>
        <identifier>
          <name>dx</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>0</index>
        </identifier>
        <symbol>,</symbol>
        <identifier>
          <name>dy</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>1</index>
        </identifier>
        <symbol>,</symbol>
        <identifier>
          <name>temp</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>2</index>
        </identifier>
        <symbol>;</symbol>
      </varDec>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>lengthx</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>2</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>destx</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <identifier>
                <name>x</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>lengthy</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>3</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>desty</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>2</index>
              </identifier>
            </term>
            <symbol>-</symbol>
            <term>
              <identifier>
                <name>y</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>dx</name>
            <category>VAR</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>0</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>Math</name>
              </identifier>
              <symbol>.</symbol>
              <identifier>
                <name>abs</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier>
                      <name>lengthx</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>2</index>
                    </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>dy</name>
            <category>VAR</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>1</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>Math</name>
              </identifier>
              <symbol>.</symbol>
              <identifier>
                <name>abs</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier>
                      <name>lengthy</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>3</index>
                    </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>invert</name>
            <category>FIELD</category>
            <type>boolean</type>
            <IsDeclaration>False</IsDeclaration>
            <index>7</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>dx</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>0</index>
                  </identifier>
                </term>
                <symbol>&lt;</symbol>
                <term>
                  <identifier>
                    <name>dy</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier>
                <name>invert</name>
                <category>FIELD</category>
                <type>boolean</type>
                <IsDeclaration>False</IsDeclaration>
                <index>7</index>
              </identifier>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>temp</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>2</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>dx</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>0</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>dx</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>dy</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>dy</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>temp</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>2</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>positivex</name>
                <category>FIELD</category>
                <type>boolean</type>
                <IsDeclaration>False</IsDeclaration>
                <index>8</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>y</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier>
                        <name>desty</name>
                        <category>ARG</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>2</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>positivey</name>
                <category>FIELD</category>
                <type>boolean</type>
                <IsDeclaration>False</IsDeclaration>
                <index>9</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>x</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier>
                        <name>destx</name>
                        <category>ARG</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>positivex</name>
                <category>FIELD</category>
                <type>boolean</type>
                <IsDeclaration>False</IsDeclaration>
                <index>8</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>x</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier>
                        <name>destx</name>
                        <category>ARG</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>positivey</name>
                <category>FIELD</category>
                <type>boolean</type>
                <IsDeclaration>False</IsDeclaration>
                <index>9</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>y</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                    <symbol>&lt;</symbol>
                    <term>
                      <identifier>
                        <name>desty</name>
                        <category>ARG</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>2</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>d</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>4</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
                <symbol>*</symbol>
                <term>
                  <identifier>
                    <name>dy</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
            <symbol>-</symbol>
            <term>
              <identifier>
                <name>dx</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>straightD</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>5</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <integerConstant>2</integerConstant>
            </term>
            <symbol>*</symbol>
            <term>
              <identifier>
                <name>dy</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>diagonalD</name>
            <category>FIELD</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>6</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <integerConstant>2</integerConstant>
            </term>
            <symbol>*</symbol>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>dy</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                </term>
                <symbol>-</symbol>
                <term>
                  <identifier>
                    <name>dx</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>0</index>
                  </identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>int</keyword>
    <identifier>
      <name>move</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>hide</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList></expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier>
                <name>d</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>4</index>
              </identifier>
            </term>
            <symbol>&lt;</symbol>
            <term>
              <integerConstant>0</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>d</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>4</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>d</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>4</index>
                  </identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <identifier>
                    <name>straightD</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>5</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>d</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>4</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>d</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>4</index>
                  </identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <identifier>
                    <name>diagonalD</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>6</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>positivey</name>
                    <category>FIELD</category>
                    <type>boolean</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>9</index>
                  </identifier>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <ifStatement>
                  <keyword>if</keyword>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>invert</name>
                        <category>FIELD</category>
                        <type>boolean</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>7</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>x</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>x</name>
                            <category>FIELD</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>0</index>
                          </identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                  <keyword>else</keyword>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>y</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>y</name>
                            <category>FIELD</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>1</index>
                          </identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                </ifStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <ifStatement>
                  <keyword>if</keyword>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>invert</name>
                        <category>FIELD</category>
                        <type>boolean</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>7</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>x</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>x</name>
                            <category>FIELD</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>0</index>
                          </identifier>
                        </term>
                        <symbol>-</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                  <keyword>else</keyword>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>y</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>y</name>
                            <category>FIELD</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>1</index>
                          </identifier>
                        </term>
                        <symbol>-</symbol>
                        <term>
                          <integerConstant>4</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                </ifStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier>
                <name>positivex</name>
                <category>FIELD</category>
                <type>boolean</type>
                <IsDeclaration>False</IsDeclaration>
                <index>8</index>
              </identifier>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>invert</name>
                    <category>FIELD</category>
                    <type>boolean</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>7</index>
                  </identifier>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>y</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>y</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>x</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>0</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>x</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>invert</name>
                    <category>FIELD</category>
                    <type>boolean</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>7</index>
                  </identifier>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>y</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>y</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                    <symbol>-</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>x</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>0</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>x</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                    </term>
                    <symbol>-</symbol>
                    <term>
                      <integerConstant>4</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>x</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>0</index>
                    </identifier>
                  </term>
                  <symbol>&gt;</symbol>
                  <term>
                    <identifier>
                      <name>leftWall</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>10</index>
                    </identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>wall</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>14</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>1</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>x</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>leftWall</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>10</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>x</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>0</index>
                    </identifier>
                  </term>
                  <symbol>&lt;</symbol>
                  <term>
                    <identifier>
                      <name>rightWall</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>11</index>
                    </identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>wall</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>14</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>x</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>rightWall</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>11</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>y</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>1</index>
                    </identifier>
                  </term>
                  <symbol>&gt;</symbol>
                  <term>
                    <identifier>
                      <name>topWall</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>12</index>
                    </identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>wall</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>14</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>3</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>y</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>topWall</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>12</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>~</symbol>
              <term>
                <symbol>(</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>y</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>1</index>
                    </identifier>
                  </term>
                  <symbol>&lt;</symbol>
                  <term>
                    <identifier>
                      <name>bottomWall</name>
                      <category>FIELD</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>13</index>
                    </identifier>
                  </term>
                </expression>
                <symbol>)</symbol>
              </term>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>wall</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>14</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>4</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>y</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>bottomWall</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>13</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>show</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList></expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <identifier>
                <name>wall</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>14</index>
              </identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>
      <name>bounce</name>
    </identifier>
    <symbol>(</symbol>
    <parameterList>
      <keyword>int</keyword>
      <identifier>
        <name>bouncingDirection</name>
        <category>ARG</category>
        <type>int</type>
        <IsDeclaration>False</IsDeclaration>
        <index>1</index>
      </identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <varDec>
        <keyword>var</keyword>
        <keyword>int</keyword>
        <identifier>
          <name>newx</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>0</index>
        </identifier>
        <symbol>,</symbol>
        <identifier>
          <name>newy</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>1</index>
        </identifier>
        <symbol>,</symbol>
        <identifier>
          <name>divLengthx</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>2</index>
        </identifier>
        <symbol>,</symbol>
        <identifier>
          <name>divLengthy</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>3</index>
        </identifier>
        <symbol>,</symbol>
        <identifier>
          <name>factor</name>
          <category>VAR</category>
          <type>int</type>
          <IsDeclaration>True</IsDeclaration>
          <index>4</index>
        </identifier>
        <symbol>;</symbol>
      </varDec>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>divLengthx</name>
            <category>VAR</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>2</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>lengthx</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>2</index>
              </identifier>
            </term>
            <symbol>/</symbol>
            <term>
              <integerConstant>10</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>
            <name>divLengthy</name>
            <category>VAR</category>
            <type>int</type>
            <IsDeclaration>False</IsDeclaration>
            <index>3</index>
          </identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>
                <name>lengthy</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>3</index>
              </identifier>
            </term>
            <symbol>/</symbol>
            <term>
              <integerConstant>10</integerConstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier>
                <name>bouncingDirection</name>
                <category>ARG</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
            </term>
            <symbol>=</symbol>
            <term>
              <integerConstant>0</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>factor</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>4</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>10</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <symbol>~</symbol>
                          <term>
                            <symbol>(</symbol>
                            <expression>
                              <term>
                                <identifier>
                                  <name>lengthx</name>
                                  <category>FIELD</category>
                                  <type>int</type>
                                  <IsDeclaration>False</IsDeclaration>
                                  <index>2</index>
                                </identifier>
                              </term>
                              <symbol>&lt;</symbol>
                              <term>
                                <integerConstant>0</integerConstant>
                              </term>
                            </expression>
                            <symbol>)</symbol>
                          </term>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                    <symbol>&amp;</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>bouncingDirection</name>
                            <category>ARG</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>1</index>
                          </identifier>
                        </term>
                        <symbol>=</symbol>
                        <term>
                          <integerConstant>1</integerConstant>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
                <symbol>|</symbol>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>lengthx</name>
                            <category>FIELD</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>2</index>
                          </identifier>
                        </term>
                        <symbol>&lt;</symbol>
                        <term>
                          <integerConstant>0</integerConstant>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                    <symbol>&amp;</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>bouncingDirection</name>
                            <category>ARG</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>1</index>
                          </identifier>
                        </term>
                        <symbol>=</symbol>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <symbol>-</symbol>
                              <term>
                                <integerConstant>1</integerConstant>
                              </term>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>factor</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>4</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <integerConstant>20</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>factor</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>4</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <integerConstant>5</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier>
                <name>wall</name>
                <category>FIELD</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>14</index>
              </identifier>
            </term>
            <symbol>=</symbol>
            <term>
              <integerConstant>1</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>newx</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>0</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <integerConstant>506</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>newy</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>divLengthy</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>3</index>
                      </identifier>
                    </term>
                    <symbol>*</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <symbol>-</symbol>
                          <term>
                            <integerConstant>50</integerConstant>
                          </term>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
                <symbol>/</symbol>
                <term>
                  <identifier>
                    <name>divLengthx</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>2</index>
                  </identifier>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>
                <name>newy</name>
                <category>VAR</category>
                <type>int</type>
                <IsDeclaration>False</IsDeclaration>
                <index>1</index>
              </identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>y</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>newy</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                    <symbol>*</symbol>
                    <term>
                      <identifier>
                        <name>factor</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>4</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
          <keyword>else</keyword>
          <symbol>{</symbol>
          <statements>
            <ifStatement>
              <keyword>if</keyword>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier>
                    <name>wall</name>
                    <category>FIELD</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>14</index>
                  </identifier>
                </term>
                <symbol>=</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>)</symbol>
              <symbol>{</symbol>
              <statements>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>newx</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>0</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <integerConstant>0</integerConstant>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>newy</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>divLengthy</name>
                            <category>VAR</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>3</index>
                          </identifier>
                        </term>
                        <symbol>*</symbol>
                        <term>
                          <integerConstant>50</integerConstant>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                    <symbol>/</symbol>
                    <term>
                      <identifier>
                        <name>divLengthx</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>2</index>
                      </identifier>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
                <letStatement>
                  <keyword>let</keyword>
                  <identifier>
                    <name>newy</name>
                    <category>VAR</category>
                    <type>int</type>
                    <IsDeclaration>False</IsDeclaration>
                    <index>1</index>
                  </identifier>
                  <symbol>=</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>y</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <symbol>(</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>newy</name>
                            <category>VAR</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>1</index>
                          </identifier>
                        </term>
                        <symbol>*</symbol>
                        <term>
                          <identifier>
                            <name>factor</name>
                            <category>VAR</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>4</index>
                          </identifier>
                        </term>
                      </expression>
                      <symbol>)</symbol>
                    </term>
                  </expression>
                  <symbol>;</symbol>
                </letStatement>
              </statements>
              <symbol>}</symbol>
              <keyword>else</keyword>
              <symbol>{</symbol>
              <statements>
                <ifStatement>
                  <keyword>if</keyword>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier>
                        <name>wall</name>
                        <category>FIELD</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>14</index>
                      </identifier>
                    </term>
                    <symbol>=</symbol>
                    <term>
                      <integerConstant>3</integerConstant>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>newy</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <integerConstant>250</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>newx</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier>
                                <name>divLengthx</name>
                                <category>VAR</category>
                                <type>int</type>
                                <IsDeclaration>False</IsDeclaration>
                                <index>2</index>
                              </identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <symbol>(</symbol>
                              <expression>
                                <term>
                                  <symbol>-</symbol>
                                  <term>
                                    <integerConstant>25</integerConstant>
                                  </term>
                                </term>
                              </expression>
                              <symbol>)</symbol>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                        <symbol>/</symbol>
                        <term>
                          <identifier>
                            <name>divLengthy</name>
                            <category>VAR</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>3</index>
                          </identifier>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>newx</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>x</name>
                            <category>FIELD</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>0</index>
                          </identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier>
                                <name>newx</name>
                                <category>VAR</category>
                                <type>int</type>
                                <IsDeclaration>False</IsDeclaration>
                                <index>0</index>
                              </identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <identifier>
                                <name>factor</name>
                                <category>VAR</category>
                                <type>int</type>
                                <IsDeclaration>False</IsDeclaration>
                                <index>4</index>
                              </identifier>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                  <keyword>else</keyword>
                  <symbol>{</symbol>
                  <statements>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>newy</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>1</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <integerConstant>0</integerConstant>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>newx</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier>
                                <name>divLengthx</name>
                                <category>VAR</category>
                                <type>int</type>
                                <IsDeclaration>False</IsDeclaration>
                                <index>2</index>
                              </identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <integerConstant>25</integerConstant>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                        <symbol>/</symbol>
                        <term>
                          <identifier>
                            <name>divLengthy</name>
                            <category>VAR</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>3</index>
                          </identifier>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                    <letStatement>
                      <keyword>let</keyword>
                      <identifier>
                        <name>newx</name>
                        <category>VAR</category>
                        <type>int</type>
                        <IsDeclaration>False</IsDeclaration>
                        <index>0</index>
                      </identifier>
                      <symbol>=</symbol>
                      <expression>
                        <term>
                          <identifier>
                            <name>x</name>
                            <category>FIELD</category>
                            <type>int</type>
                            <IsDeclaration>False</IsDeclaration>
                            <index>0</index>
                          </identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                          <symbol>(</symbol>
                          <expression>
                            <term>
                              <identifier>
                                <name>newx</name>
                                <category>VAR</category>
                                <type>int</type>
                                <IsDeclaration>False</IsDeclaration>
                                <index>0</index>
                              </identifier>
                            </term>
                            <symbol>*</symbol>
                            <term>
                              <identifier>
                                <name>factor</name>
                                <category>VAR</category>
                                <type>int</type>
                                <IsDeclaration>False</IsDeclaration>
                                <index>4</index>
                              </identifier>
                            </term>
                          </expression>
                          <symbol>)</symbol>
                        </term>
                      </expression>
                      <symbol>;</symbol>
                    </letStatement>
                  </statements>
                  <symbol>}</symbol>
                </ifStatement>
              </statements>
              <symbol>}</symbol>
            </ifStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <doStatement>
          <keyword>do</keyword>
          <expression>
            <term>
              <identifier>
                <name>setDestination</name>
              </identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier>
                      <name>newx</name>
                      <category>VAR</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>0</index>
                    </identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier>
                      <name>newy</name>
                      <category>VAR</category>
                      <type>int</type>
                      <IsDeclaration>False</IsDeclaration>
                      <index>1</index>
                    </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol>}</symbol>
</class>
